version: '3'

services:
  http:
    privileged: true
    hostname: res.http
    build: docker-images/apache-php-image/
    networks:
      - lan
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http.entrypoints=http"
      - "traefik.http.routers.http.rule=Host(`demo.res.com`)"
      - "traefik.http.routers.http.service=demores"
      - "traefik.http.services.demores.loadbalancer.server.port=80"
      - "traefik.http.services.demores.loadbalancer.sticky.cookie.name=route-http"
      - "traefik.docker.network=lan"
                               
                
  express:
    privileged: true
    hostname : res.express
    build: express-image/
    networks:
      - lan
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.express.entrypoints=http"
      - "traefik.http.routers.express.rule=Host(`demo.res.com`) && Path(`/api/students/`)"
      - "traefik.http.routers.express.service=addresses"
      # connect the route to express:3000
      - "traefik.http.services.addresses.loadbalancer.server.port=3000"
      - "traefik.http.services.addresses.loadbalancer.sticky.cookie.name=route-express"
      - "traefik.docker.network=lan"
      # Create a middleware 
      - "traefik.http.middlewares.replace-path.replacepath.path=/"
      # Apply the middleware 
      - "traefik.http.routers.express.middlewares=replace-path"

  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    privileged: true
    container_name: traefik
    networks:
      - lan
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      
networks:
  lan:
    name: "lan"
